{
  "custom": {
    "isRefMQTTTag": true,
    "max": 10000,
    "min": 0,
    "numberFormat": "##,##0",
    "pv": 612,
    "refTagSourcePath": "[MQTT Engine]Edge Nodes/Mt Compass/MCP02 Caravan Park/TAGS/KOYO_PLC/ALS/Level/PV",
    "tagPath": "[default]Alexandrina/Mt Compass/WWPS/MCP02/ALS/Level/PV",
    "units": "mm",
    "writeEnable": false
  },
  "params": {
    "tagName": "PV",
    "tagParentPath": "[default]Alexandrina/Mt Compass/WWPS/MCP02/ALS/Level"
  },
  "propConfig": {
    "custom.isRefMQTTTag": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "tagPath": "{view.custom.tagPath}"
          },
          "tagPath": "{tagPath}.valueSource"
        },
        "transforms": [
          {
            "expression": "{value} \u003d \u0027reference\u0027",
            "type": "expression"
          }
        ],
        "type": "tag"
      },
      "persistent": true
    },
    "custom.max": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "1": "{view.custom.tagPath}"
          },
          "tagPath": "{1}.EngHigh"
        },
        "type": "tag"
      },
      "persistent": true
    },
    "custom.min": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "1": "{view.custom.tagPath}"
          },
          "tagPath": "{1}.EngLow"
        },
        "type": "tag"
      },
      "persistent": true
    },
    "custom.numberFormat": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "tagPath": "{view.custom.tagPath}"
          },
          "tagPath": "{tagPath}.FormatString"
        },
        "type": "tag"
      },
      "persistent": true
    },
    "custom.pv": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "1": "{view.custom.tagPath}"
          },
          "tagPath": "{1}"
        },
        "type": "tag"
      },
      "persistent": true
    },
    "custom.refTagSourcePath": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "1": "{view.custom.tagPath}"
          },
          "tagPath": "{1}.sourceTagPath"
        },
        "overlayOptOut": true,
        "type": "tag"
      },
      "persistent": true
    },
    "custom.tagPath": {
      "binding": {
        "config": {
          "expression": "{view.params.tagParentPath} + \u0027/\u0027 +\r\n{view.params.tagName}"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.units": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "1": "{view.custom.tagPath}"
          },
          "tagPath": "{1}.EngUnit"
        },
        "type": "tag"
      },
      "persistent": true
    },
    "custom.writeEnable": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "tagPath": "{view.custom.tagPath}"
          },
          "tagPath": "{tagPath}.canWrite"
        },
        "type": "tag"
      },
      "persistent": true
    },
    "params.labelOverride": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.tagName": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.tagParentPath": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 32,
      "width": 150
    }
  },
  "root": {
    "children": [
      {
        "children": [
          {
            "meta": {
              "name": "units"
            },
            "position": {
              "basis": "10px",
              "shrink": 0
            },
            "propConfig": {
              "props.style.backgroundColor": {
                "binding": {
                  "config": {
                    "path": "view.custom.writeEnable"
                  },
                  "transforms": [
                    {
                      "expression": "if({value},\r\n\t\u0027#FFFFFF\u0027,\r\n\t\u0027#BDBDBD\u0027\r\n)",
                      "type": "expression"
                    }
                  ],
                  "type": "property"
                }
              },
              "props.style.color": {
                "binding": {
                  "config": {
                    "path": "view.custom.writeEnable"
                  },
                  "transforms": [
                    {
                      "expression": "if({value},\r\n\t\u0027#000000\u0027,\r\n\t\u0027#767676\u0027\r\n)",
                      "type": "expression"
                    }
                  ],
                  "type": "property"
                }
              },
              "props.text": {
                "binding": {
                  "config": {
                    "path": "view.custom.units"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "style": {
                "borderTopLeftRadius": "3px",
                "borderTopRightRadius": "3px",
                "fontSize": "8pt",
                "textAlign": "right"
              }
            },
            "type": "ia.display.label"
          },
          {
            "meta": {
              "name": "NumericEntryField"
            },
            "position": {
              "basis": "32px"
            },
            "propConfig": {
              "props.enabled": {
                "binding": {
                  "config": {
                    "fallbackDelay": 2.5,
                    "mode": "indirect",
                    "references": {
                      "tagPath": "{view.custom.tagPath}"
                    },
                    "tagPath": "{tagPath}.canWrite"
                  },
                  "type": "tag"
                }
              },
              "props.format": {
                "binding": {
                  "config": {
                    "fallbackDelay": 2.5,
                    "mode": "indirect",
                    "references": {
                      "tagPath": "{view.custom.tagPath}"
                    },
                    "tagPath": "{tagPath}.FormatString"
                  },
                  "type": "tag"
                }
              },
              "props.inputBounds.maximum": {
                "binding": {
                  "config": {
                    "fallbackDelay": 2.5,
                    "mode": "indirect",
                    "references": {
                      "tagPath": "{view.custom.tagPath}"
                    },
                    "tagPath": "{tagPath}.EngHigh"
                  },
                  "type": "tag"
                }
              },
              "props.inputBounds.minimum": {
                "binding": {
                  "config": {
                    "fallbackDelay": 2.5,
                    "mode": "indirect",
                    "references": {
                      "tagPath": "{view.custom.tagPath}"
                    },
                    "tagPath": "{tagPath}.EngLow"
                  },
                  "type": "tag"
                }
              },
              "props.style.backgroundColor": {
                "binding": {
                  "config": {
                    "path": "view.custom.writeEnable"
                  },
                  "transforms": [
                    {
                      "expression": "if({value},\r\n\t\u0027#FFFFFF\u0027,\r\n\t\u0027#BDBDBD\u0027\r\n)",
                      "type": "expression"
                    }
                  ],
                  "type": "property"
                }
              },
              "props.style.color": {
                "binding": {
                  "config": {
                    "path": "view.custom.writeEnable"
                  },
                  "transforms": [
                    {
                      "expression": "if({value},\r\n\t\u0027#000000\u0027,\r\n\t\u0027#767676\u0027\r\n)",
                      "type": "expression"
                    }
                  ],
                  "type": "property"
                }
              },
              "props.value": {
                "binding": {
                  "config": {
                    "bidirectional": true,
                    "fallbackDelay": 2.5,
                    "mode": "indirect",
                    "references": {
                      "tagPath": "{view.custom.tagPath}"
                    },
                    "tagPath": "{tagPath}"
                  },
                  "type": "tag"
                }
              }
            },
            "props": {
              "inputBounds": {},
              "style": {
                "borderStyle": "none",
                "borderTopLeftRadius": 0,
                "borderTopRightRadius": 0,
                "fontSize": 16,
                "fontWeight": "bold",
                "paddingRight": "10px"
              }
            },
            "type": "ia.input.numeric-entry-field"
          }
        ],
        "meta": {
          "name": "FlexContainer_0"
        },
        "position": {
          "basis": "20px",
          "grow": 1,
          "shrink": 0
        },
        "props": {
          "direction": "column",
          "style": {
            "backgroundColor": "#ffffff00",
            "marginRight": 0,
            "overflow": "visible"
          }
        },
        "type": "ia.container.flex"
      }
    ],
    "events": {
      "dom": {
        "onContextMenu": {
          "config": {
            "draggable": true,
            "id": "{view.custom.tagPath}",
            "modal": false,
            "overlayDismiss": false,
            "resizable": true,
            "showCloseIcon": true,
            "title": "Tag Info",
            "type": "open",
            "viewParams": {
              "tagName": "{view.params.tagName}",
              "tagParentPath": "{view.params.tagParentPath}"
            },
            "viewPath": "Shared/Popups/ppu_TagInfo",
            "viewportBound": true
          },
          "preventDefault": true,
          "scope": "C",
          "type": "popup"
        }
      }
    },
    "meta": {
      "name": "root",
      "tooltip": {
        "text": "Requires Login"
      }
    },
    "propConfig": {
      "meta.tooltip.enabled": {
        "binding": {
          "config": {
            "fallbackDelay": 2.5,
            "mode": "indirect",
            "references": {
              "tagPath": "{view.custom.tagPath}"
            },
            "tagPath": "{tagPath}.canWrite"
          },
          "transforms": [
            {
              "expression": "!{value}",
              "type": "expression"
            }
          ],
          "type": "tag"
        }
      },
      "props.style.backgroundColor": {
        "binding": {
          "config": {
            "fallbackDelay": 2.5,
            "mode": "indirect",
            "references": {
              "tagPath": "{view.custom.tagPath}"
            },
            "tagPath": "{tagPath}.canWrite"
          },
          "transforms": [
            {
              "expression": "if({value},\r\n\t\u0027%FFFFFF\u0027,\r\n\t\u0027%D5D5D5\u0027\r\n)",
              "type": "expression"
            }
          ],
          "type": "tag"
        }
      }
    },
    "props": {
      "justify": "flex-end",
      "style": {
        "borderBottomLeftRadius": "3px",
        "borderBottomRightRadius": "3px",
        "borderStyle": "solid",
        "borderTopLeftRadius": "3px",
        "borderTopRightRadius": "3px",
        "borderWidth": "1px",
        "marginBottom": 0,
        "marginLeft": 0,
        "marginRight": 0,
        "marginTop": 0,
        "overflow": "visible",
        "paddingBottom": 0,
        "paddingLeft": 0,
        "paddingRight": 0,
        "paddingTop": 0
      }
    },
    "type": "ia.container.flex"
  }
}